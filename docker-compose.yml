version: "3"
services:
  flask:
    build: ./backend
    container_name: flask-cloud-service
    environment:
      - CONFIG_PATH=/backend/settings.ini
      - FLASK_APP=main.py

      - REDIS_PASSWORD=PASSWORD123

      # для отладки (при запуске в релиз убрать!)
      - FLASK_DEBUG=1
      - PYTHONUNBUFFERED=True                   # Позволяет отслеживать процесс работы приложения в командной строке
    depends_on:
      - postgredb
    restart: on-failure
    volumes:
      - ./backend:/backend
    ports:
      - "5555:5000"
    # command: python3 main.py
    # для релиза
    command: gunicorn main:create_flask_app() --timeout=3600000 --workers 1 --threads 200 -b 0.0.0.0:5000 --reload
  
  postgredb:
    image: postgres:11.5-alpine
    container_name: postgredb-cloud-service
    ports:
     - '5435:5432'
    environment:
      POSTGRES_PASSWORD: PASSWORD123
      POSTGRES_DB: db_name
      POSTGRES_USER: user
    restart: on-failure
    command: ["-c", "shared_buffers=2GB", "-c", "max_connections=10000", "-c", "shared_preload_libraries=pg_stat_statements"]
    volumes:
     - ./postgre/pg_askuedb:/var/lib/postgresql/data/
     - ./db_scripts:/root/scripts
  
  redis:
    build: ./redis
    container_name: redis-cloud-service
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=PASSWORD123
    restart: on-failure
    volumes:
      - ./redis/data:/data
    ports:
      - 6375:6379
